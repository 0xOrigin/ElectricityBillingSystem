package Views.Admin;

import Controllers.Interface.AdminDashboardController;
import Controllers.Interface.Controller;
import Models.Enum.ConsumptionStat;
import Models.Enum.GovernmentCode;
import Views.View;
import Views.ViewsHelper;
import java.util.Map;
import javax.swing.JFrame;

/**
 *
 * @author xorigin
 */
public class ConsumptionStatisticsForRegion extends javax.swing.JFrame implements View{

    /**
     * Creates new form ConsumptionStatistics
     * @param previousFrame
     * @param controller
     */
    public ConsumptionStatisticsForRegion(javax.swing.JFrame previousFrame, Controller controller) {
        
        this.setPreviousFrame(previousFrame);
        this.setController(controller);
        
        initComponents();
        this.setSpecialSettings();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RegionField = new javax.swing.JComboBox<>();
        StatusLabel = new javax.swing.JLabel();
        BackButton = new javax.swing.JButton();
        ActualNumOfConsLabel = new javax.swing.JLabel();
        SumOfConsLabel = new javax.swing.JLabel();
        AvgConsLabel = new javax.swing.JLabel();
        ActualNumOfConsField = new javax.swing.JLabel();
        SumOfConsField = new javax.swing.JLabel();
        AvgConsField = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Make Consumption Statistics");
        setResizable(false);

        RegionField.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        RegionField.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                RegionFieldAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        RegionField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegionFieldActionPerformed(evt);
            }
        });

        StatusLabel.setFont(new java.awt.Font("Arial", 0, 17)); // NOI18N
        StatusLabel.setText("Select region");

        BackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/BackIcon.png"))); // NOI18N
        BackButton.setToolTipText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        ActualNumOfConsLabel.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        ActualNumOfConsLabel.setText("Actual number of consumers: ");

        SumOfConsLabel.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        SumOfConsLabel.setText("Summation of Consumptions: ");

        AvgConsLabel.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        AvgConsLabel.setText("Average Consumption: ");

        ActualNumOfConsField.setFont(new java.awt.Font("Chandas", 1, 14)); // NOI18N
        ActualNumOfConsField.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ActualNumOfConsField.setText("0");

        SumOfConsField.setFont(new java.awt.Font("Chandas", 1, 14)); // NOI18N
        SumOfConsField.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SumOfConsField.setText("0");

        AvgConsField.setFont(new java.awt.Font("Chandas", 1, 14)); // NOI18N
        AvgConsField.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AvgConsField.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(ActualNumOfConsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ActualNumOfConsField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(AvgConsLabel)
                                .addGap(52, 52, 52)
                                .addComponent(AvgConsField, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SumOfConsLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SumOfConsField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(54, 54, 54))
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(StatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RegionField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BackButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegionField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ActualNumOfConsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ActualNumOfConsField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SumOfConsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SumOfConsField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AvgConsField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AvgConsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RegionFieldAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_RegionFieldAncestorAdded

        this.fillRegionField();
    }//GEN-LAST:event_RegionFieldAncestorAdded

    private void RegionFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegionFieldActionPerformed

        String governorate = ViewsHelper.getEnumValueAsString(this.RegionField.getSelectedItem().toString());
        String governorateCode = GovernmentCode.valueOf(governorate).getCode();

        this.statInfo = this.controller.getConsumptionStatOfRegion(governorateCode);
        
        this.updateActualNumOfConsumers();
        this.updateSumOfConsumptions();
        this.updateAverageOfConsumptions();
    }//GEN-LAST:event_RegionFieldActionPerformed

    private void updateActualNumOfConsumers(){
    
        this.ActualNumOfConsField.setText(this.statInfo.get(ConsumptionStat.ActualNumberOfConsumers).toString());
    }
    
    private void updateSumOfConsumptions(){
    
        this.SumOfConsField.setText(this.statInfo.get(ConsumptionStat.SumOfConsumptions).toString());
    }
    
    private void updateAverageOfConsumptions(){
    
        this.AvgConsField.setText(this.statInfo.get(ConsumptionStat.AverageConsumption).toString());
    }
    
    private void fillRegionField(){
    
        String[] governorates = ViewsHelper.getSortedStringValues(GovernmentCode.values());
        
        for(String governorate : governorates)
            this.RegionField.addItem(governorate);
        
        this.RegionField.setSelectedIndex(0);
    }
    
    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed

        this.dispose();
        this.previousFrame.revalidate();
        this.previousFrame.setVisible(true);
    }//GEN-LAST:event_BackButtonActionPerformed

    @Override
    public final void setSpecialSettings() {
        
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }
    
    @Override
    public final void setController(Controller controller){
        
        this.controller = (AdminDashboardController) controller;
    }
    
    @Override
    public final void setPreviousFrame(JFrame previousFrame) {
        
        this.previousFrame = previousFrame;
    }
    
    @Override
    public javax.swing.JFrame getPreviousFrame(){
    
        return this.previousFrame;
    }
    
    Map<Enum, Object> statInfo;
    private AdminDashboardController controller;
    private javax.swing.JFrame previousFrame;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ActualNumOfConsField;
    private javax.swing.JLabel ActualNumOfConsLabel;
    private javax.swing.JLabel AvgConsField;
    private javax.swing.JLabel AvgConsLabel;
    private javax.swing.JButton BackButton;
    private javax.swing.JComboBox<String> RegionField;
    private javax.swing.JLabel StatusLabel;
    private javax.swing.JLabel SumOfConsField;
    private javax.swing.JLabel SumOfConsLabel;
    // End of variables declaration//GEN-END:variables
}
