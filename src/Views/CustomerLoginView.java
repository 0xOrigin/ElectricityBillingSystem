package Views;

import Views.Customer.CustomerDashboardView;
import Controllers.CustomerDashboardControllerImp;
import Models.EBS_DbContext;
import javax.swing.JOptionPane;
import Controllers.Interface.Controller;
import Controllers.Interface.CustomerLoginController;
import javax.swing.JFrame;

/**
 *
 * @author xorigin
 */
public class CustomerLoginView extends javax.swing.JFrame implements View {

    /**
     * Creates new form CustomerLogin
     * @param previousFrame
     */
    public CustomerLoginView(javax.swing.JFrame previousFrame) {
        
        this.setPreviousFrame(previousFrame);
        
        initComponents();
        
        this.setSpecialSettings();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackButton = new javax.swing.JButton();
        FrameDescription = new javax.swing.JLabel();
        MeterCodeField = new javax.swing.JTextField();
        MeterCodeLabel = new javax.swing.JLabel();
        PasswordField = new javax.swing.JPasswordField();
        PasswordLabel = new javax.swing.JLabel();
        LoginButton = new javax.swing.JButton();
        ForgetPasswordButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Customer Login");
        setResizable(false);

        BackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/BackIcon.png"))); // NOI18N
        BackButton.setToolTipText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        FrameDescription.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        FrameDescription.setText(" Customer Login ");
        FrameDescription.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        MeterCodeField.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        MeterCodeField.setToolTipText("Enter your meter code");
        MeterCodeField.setMinimumSize(new java.awt.Dimension(64, 30));
        MeterCodeField.setPreferredSize(new java.awt.Dimension(64, 30));
        MeterCodeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MeterCodeFieldActionPerformed(evt);
            }
        });

        MeterCodeLabel.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        MeterCodeLabel.setLabelFor(MeterCodeField);
        MeterCodeLabel.setText("Meter code");
        MeterCodeLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        PasswordField.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        PasswordField.setToolTipText("Enter your password");
        PasswordField.setMinimumSize(new java.awt.Dimension(64, 30));
        PasswordField.setPreferredSize(new java.awt.Dimension(64, 30));
        PasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordFieldActionPerformed(evt);
            }
        });

        PasswordLabel.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        PasswordLabel.setLabelFor(PasswordField);
        PasswordLabel.setText("Password");
        PasswordLabel.setToolTipText("");
        PasswordLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        LoginButton.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        LoginButton.setText("Login");
        LoginButton.setToolTipText("Press to login.");
        LoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButtonActionPerformed(evt);
            }
        });

        ForgetPasswordButton.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        ForgetPasswordButton.setText("Forget password");
        ForgetPasswordButton.setToolTipText("Press to get new password.");
        ForgetPasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ForgetPasswordButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96)
                .addComponent(FrameDescription)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PasswordLabel)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(MeterCodeLabel)
                            .addGap(207, 207, 207))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ForgetPasswordButton))
                                .addComponent(MeterCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(93, 93, 93))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(FrameDescription, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BackButton, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MeterCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MeterCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(PasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ForgetPasswordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed

        this.dispose();
        this.previousFrame.revalidate();
        this.previousFrame.setVisible(true);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void LoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginButtonActionPerformed
        
        this.globalValidationState = true;
        
        this.MeterCodeFieldActionPerformed(null);
        this.PasswordFieldActionPerformed(null);
        
        String password = String.copyValueOf(this.PasswordField.getPassword());
        
        if(this.globalValidationState && this.controller.isValidAccount(this.MeterCodeField.getText(), password)){
           
            String message = "You will be redirected to the Customer Dashboard.";
            
            JOptionPane.showMessageDialog(this, message, "Successful Login", JOptionPane.INFORMATION_MESSAGE);
            
            this.redirectToCustomerDashboard();
            
        } else {
        
            String message = "Wrong meter code or password.";
            
            JOptionPane.showMessageDialog(this, message, "Login failed", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_LoginButtonActionPerformed

    private void ForgetPasswordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ForgetPasswordButtonActionPerformed
        
        this.globalValidationState = true;
        
        this.MeterCodeFieldActionPerformed(null);
        
        String meterCode = this.MeterCodeField.getText();
        
        if(this.globalValidationState && this.controller.isMeterCodeExists(meterCode)){
        
            String message = "You will receive an email to your email address registered in the system with a new password.";
            
            this.controller.generateNewPassword(meterCode);
            
            JOptionPane.showMessageDialog(this, message, "Successful operation", JOptionPane.INFORMATION_MESSAGE);
            
        } else {
        
            String message = "Meter code entered incorrectly or this meter code does not exist.";
            
            JOptionPane.showMessageDialog(this, message, "Problem with meter code", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ForgetPasswordButtonActionPerformed

    private void MeterCodeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MeterCodeFieldActionPerformed
        
        if(this.MeterCodeField.getText().isBlank()){

            this.globalValidationState = false;

            JOptionPane.showMessageDialog(this, "Please enter a valid meter code.", "Meter code field", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_MeterCodeFieldActionPerformed

    private void PasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordFieldActionPerformed
        
        if(String.copyValueOf(this.PasswordField.getPassword()).isBlank()){

            this.globalValidationState = false;

            JOptionPane.showMessageDialog(this, "Please enter a valid password.", "Password field", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_PasswordFieldActionPerformed

    
    public void redirectToCustomerDashboard(){
    
        this.dispose();
        new CustomerDashboardControllerImp(new CustomerDashboardView(this.previousFrame), new EBS_DbContext(), this.MeterCodeField.getText());
    }
    
    @Override
    public final void setSpecialSettings() {
        
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        
        this.MeterCodeField.setDocument(new FixedSizeDocument(15));
        this.PasswordField.setDocument(new FixedSizeDocument(10));
    }
    
    @Override
    public void setController(Controller controller){
    
        this.controller = (CustomerLoginController) controller;
    }
    
    @Override
    public final void setPreviousFrame(JFrame previousFrame) {
        
        this.previousFrame = previousFrame;
    }
    
    @Override
    public javax.swing.JFrame getPreviousFrame(){
    
        return this.previousFrame;
    }
    
    
    private CustomerLoginController controller;
    private boolean globalValidationState = false;
    private javax.swing.JFrame previousFrame;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton ForgetPasswordButton;
    private javax.swing.JLabel FrameDescription;
    private javax.swing.JButton LoginButton;
    private javax.swing.JTextField MeterCodeField;
    private javax.swing.JLabel MeterCodeLabel;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JLabel PasswordLabel;
    // End of variables declaration//GEN-END:variables

}
